#!/bin/bash

# VNStock Data Collector - Docker Management Script
# Script qu·∫£n l√Ω container Docker

case "$1" in
    "start")
        echo "üöÄ Kh·ªüi ch·∫°y VNStock Data Collector..."
        docker-compose up -d
        echo "‚úÖ Container ƒë√£ kh·ªüi ch·∫°y"
        ;;
    "stop")
        echo "üõë D·ª´ng VNStock Data Collector..."
        docker-compose down
        echo "‚úÖ Container ƒë√£ d·ª´ng"
        ;;
    "restart")
        echo "üîÑ Kh·ªüi ƒë·ªông l·∫°i VNStock Data Collector..."
        docker-compose restart
        echo "‚úÖ Container ƒë√£ kh·ªüi ƒë·ªông l·∫°i"
        ;;
    "status")
        echo "üìä Tr·∫°ng th√°i VNStock Data Collector:"
        docker-compose ps
        echo ""
        echo "üè• Health Check:"
        curl -s http://localhost:8501/health || echo "‚ùå API kh√¥ng ph·∫£n h·ªìi"
        ;;
    "logs")
        echo "üìã Logs VNStock Data Collector:"
        docker-compose logs -f
        ;;
    "build")
        echo "üî® Build l·∫°i Docker image..."
        docker-compose build --no-cache
        echo "‚úÖ Build ho√†n t·∫•t"
        ;;
    "clean")
        echo "üßπ D·ªçn d·∫πp Docker..."
        docker-compose down
        docker system prune -f
        echo "‚úÖ D·ªçn d·∫πp ho√†n t·∫•t"
        ;;
    "test")
        echo "üß™ Test API endpoints:"
        echo "====================="
        echo "üè• Health Check:"
        curl -s http://localhost:8501/health | jq . 2>/dev/null || curl -s http://localhost:8501/health
        echo ""
        echo "üìñ API Info:"
        curl -s http://localhost:8501/ | jq . 2>/dev/null || curl -s http://localhost:8501/
        echo ""
        echo "üìä Test v·ªõi m√£ VIC:"
        curl -s "http://localhost:8501/stock/VIC/overview" | jq . 2>/dev/null || curl -s "http://localhost:8501/stock/VIC/overview"
        ;;
    *)
        echo "üê≥ VNStock Data Collector - Docker Management"
        echo "============================================="
        echo ""
        echo "üìã C√°c l·ªánh c√≥ s·∫µn:"
        echo "  start    - Kh·ªüi ch·∫°y container"
        echo "  stop     - D·ª´ng container"
        echo "  restart  - Kh·ªüi ƒë·ªông l·∫°i container"
        echo "  status   - Xem tr·∫°ng th√°i container"
        echo "  logs     - Xem logs real-time"
        echo "  build    - Build l·∫°i Docker image"
        echo "  clean    - D·ªçn d·∫πp Docker"
        echo "  test     - Test API endpoints"
        echo ""
        echo "üí° V√≠ d·ª• s·ª≠ d·ª•ng:"
        echo "  ./docker_management.sh start"
        echo "  ./docker_management.sh status"
        echo "  ./docker_management.sh logs"
        ;;
esac
